library(ggplot2)
ggplot(df, aes(x=x,y=y)) +
geom_line()
ggplot(df, aes(x=x,y=y)) +
geom_line() +
xlab('n') +
ylab('Yn')
?qbinom
setwd("C:/Users/marko/OneDrive/Desktop/MLDS1/Homework5")
Try executing this chunk by clicking the *Run* button within the chunk or by placing your cursor inside it and pressing *Ctrl+Shift+Enter*.
plot(cars)
When you save the notebook, an HTML file containing the code and output will be saved alongside it (click the *Preview* button or press *Ctrl+Shift+K* to preview the HTML file).
toy_data <- function(n, seed = NULL) {
set.seed(seed)
x <- matrix(rnorm(8 * n), ncol = 8)
z <- 0.4 * x[,1] - 0.5 * x[,2] + 1.75 * x[,3] - 0.2 * x[,4] + x[,5]
y <- runif(n) > 1 / (1 + exp(-z))
return (data.frame(x = x, y = y))
}
log_loss <- function(y, p) {
-(y * log(p) + (1 - y) * log(1 - p))
}
x <- matrix(rnorm(8 * n), ncol = 8)
n=10
x <- matrix(rnorm(8 * n), ncol = 8)
x
rnorm(8 * n)
x[,1]
x[:,1]
x[,1]
x
runif(n)
0.4 * x[,1] - 0.5 * x[,2] + 1.75 * x[,3] - 0.2 * x[,4] + x[,5]
runif(n) > 1 / (1 + exp(-z))
z <- 0.4 * x[,1] - 0.5 * x[,2] + 1.75 * x[,3] - 0.2 * x[,4] + x[,5]
y <- runif(n) > 1 / (1 + exp(-z))
y
toy_data <- function(n, seed = NULL) {
set.seed(seed)
x <- matrix(rnorm(8 * n), ncol = 8)
z <- 0.4 * x[,1] - 0.5 * x[,2] + 1.75 * x[,3] - 0.2 * x[,4] + x[,5]
y <- runif(n) > 1 / (1 + exp(-z))
return (data.frame(x = x, y = y))
}
log_loss <- function(y, p) {
-(y * log(p) + (1 - y) * log(1 - p))
}
df_dgp <- toy_data(100000, 0)
df_dgp
#df_dgp
toy_dataset = toy_data(50)
toy_dataset
toy_dataset.y
toy_dataset['y']
toy_dataset
toy_dataset.columns
toy_dataset[x1]
toy_dataset[x.1]
View(toy_dataset)
View(toy_dataset)
colnames(toy_dataset)
colnames(toy_dataset)[-1]
colnames(toy_dataset)[1]
colnames(toy_dataset)[:-1]
colnames(toy_dataset)[-1]
colnames(toy_dataset)[-2]
colnames(toy_dataset)[1]
colnames(toy_dataset)[-8]
colnames(toy_dataset)[-9]
model  <- glm(y~colnames(toy_dataset)[-9], family="binomial", data=toy_dataset)
colnames(toy_dataset)
model  <- x.1, family="binomial", data=toy_dataset)
model  <- glm(y~x.1 family="binomial", data=toy_dataset)
model  <- glm(y~x.1, family="binomial", data=toy_dataset)
model  <- glm(y ~ x.1+x.2, family="binomial", data=toy_dataset)
x.1+x.2
model  <- glm(y ~ x.1+x.2+x.3+x.4+x.5+x.6+x.7+x.8, family="binomial", data=toy_dataset)
summary(model)
ds_dgp <- toy_data(100000, 0)
toy_dataset = toy_data(1000)
model  <- glm(y ~ x.1+x.2+x.3+x.4+x.5+x.6+x.7+x.8, family="binomial", data=toy_dataset)
toy_dataset = toy_data(1000)
model  <- glm(y ~ x.1+x.2+x.3+x.4+x.5+x.6+x.7+x.8, family="binomial", data=toy_dataset)
summary(model)
toy_dataset = toy_data(50)
model  <- glm(y ~ x.1+x.2+x.3+x.4+x.5+x.6+x.7+x.8, family="binomial", data=toy_dataset)
?predict
toy_dataset
toy_dataset[:8]
toy_dataset[,8]
toy_dataset[,8;]
toy_dataset[,8]
toy_dataset[:,8]
toy_dataset[,8]
toy_dataset[,c(1,2,3,4,5,6,7,8)]
1:8
predict(model, toy_dataset[,1:8], type="response")
predict(model, toy_dataset[,1:8], type="terms")
predict(model, toy_dataset[,1:8], type="response")
predict(model, toy_dataset[,1:8])
model  <- glm(y ~ x.1+x.2+x.3+x.4+x.5+x.6+x.7+x.8, family="binomial", data=toy_dataset)
predict(model, toy_dataset[,1:8], type="terms")
toy_dataset[,1:8]
toy_dataset = toy_data(50, 0)
model  <- glm(y ~ x.1+x.2+x.3+x.4+x.5+x.6+x.7+x.8, family="binomial", data=toy_dataset)
predict(model, toy_dataset[,1:8], type="terms")
toy_dataset
toy_dataset[1,1:8]
#predict(model, toy_dataset[,1:8], type="terms")
toy_dataset
predict(model, toy_dataset[1,1:8], type="terms")
toy_dataset[y]
y
toy_data <- function(n, seed = NULL) {
set.seed(seed)
x <- matrix(rnorm(8 * n), ncol = 8)
z <- 0.4 * x[,1] - 0.5 * x[,2] + 1.75 * x[,3] - 0.2 * x[,4] + x[,5]
y <- runif(n) > 1 / (1 + exp(-z))
return (data.frame(x = x, y = y))
}
log_loss <- function(y, p) {
-(y * log(p) + (1 - y) * log(1 - p))
}
ds_dgp <- toy_data(100000, 0)
#df_dgp
toy_dataset = toy_data(50, 0)
model  <- glm(y ~ x.1+x.2+x.3+x.4+x.5+x.6+x.7+x.8, family="binomial", data=toy_dataset)
y
toy_dataset[y]
toy_dataset['y']
predict(model, toy_dataset[1,1:8], type="terms")
model  <- glm('y' ~ 'x.1'+'x.2'+'x.3'+'x.4'+'x.5'+'x.6'+'x.7'+'x.8', family="binomial", data=toy_dataset)
model  <- glm(y ~ x.1+x.2+x.3+x.4+x.5+x.6+x.7+x.8, family="binomial", data=toy_dataset)
#predict(model, toy_dataset[,1:8], type="terms")
toy_dataset
toy_dataset[1,]
#predict(model, toy_dataset[,1:8], type="response")
predict(model, toy_dataset[,1:8], type="response")
predict(model, toy_dataset[1,1:8], type="response")
predict(model, toy_dataset[2,1:8], type="response")
predict(model, toy_dataset[,1:8], type="response")
toy_dataset[,9]
toy_dataset = toy_data(50, 0)
model  <- glm(y ~ x.1+x.2+x.3+x.4+x.5+x.6+x.7+x.8, family="binomial", data=toy_dataset)
y_pred <- predict(model, toy_dataset[,1:8], type="response")
loss <- log_loss(toy_dataset[,9], y_pred)
loss
y_pred
TRUE - False
TRUE - FALSE
TRUE * 2
FALSE * 2
1-FALSE
1-TRUE
log_loss <- function(y, p) {
-(y * log(p) + (1 - y) * log(1 - p))
}
loss <- log_loss(toy_dataset[,9], y_pred)
loss
ds_dgp[,9]*log(y_pred)
y_pred
log(y_pred)
toy_dataset
y_pred
toy_dataset[,9]*log(y_pred)
-toy_dataset[,9]*log(y_pred)
sum(toy_dataset[,9]*log(y_pred))
len(y_pred)
length(y_pred)
toy_dataset = toy_data(50, 0)
model  <- glm(y ~ x.1+x.2+x.3+x.4+x.5+x.6+x.7+x.8, family="binomial", data=toy_dataset)
y_pred <- predict(model, ds_dgp[,1:8], type="response") #predict on the proxy
true_risk <- 1/legth(y_pred)*sum(log_loss(ds_dgp[,9], y_pred))
true_risk <- 1/length(y_pred)*sum(log_loss(ds_dgp[,9], y_pred))
true_risk
?std
?sd
y_pred
sd(y_pred)
sd(y_pred)**2
?var
var(y_pred)
risk_estimates <- c()
risk_estimates
toy_data <- function(n, seed = NULL) {
set.seed(seed)
x <- matrix(rnorm(8 * n), ncol = 8)
z <- 0.4 * x[,1] - 0.5 * x[,2] + 1.75 * x[,3] - 0.2 * x[,4] + x[,5]
y <- runif(n) > 1 / (1 + exp(-z))
return (data.frame(x = x, y = y))
}
log_loss <- function(y, p) {
-(y * log(p) + (1 - y) * log(1 - p))
}
toy_dataset = toy_data(50, 0)
model  <- glm(y ~ x.1+x.2+x.3+x.4+x.5+x.6+x.7+x.8, family="binomial", data=toy_dataset)
y_pred <- predict(model, ds_dgp[,1:8], type="response") #predict on the proxy
ds_dgp <- toy_data(100000, 123)
#df_dgp
toy_dataset = toy_data(50, 0)
model  <- glm(y ~ x.1+x.2+x.3+x.4+x.5+x.6+x.7+x.8, family="binomial", data=toy_dataset)
y_pred <- predict(model, ds_dgp[,1:8], type="response") #predict on the proxy
true_risk <- 1/length(y_pred)*sum(log_loss(ds_dgp[,9], y_pred))
est_risk_minus_true_risk <- c()
for (i in 1:1000) {
temp_toy_dataset = toy_data(50, i)
y_pred <- predict(model, temp_toy_dataset[,1:8], type="response")
loss <- 1/length(y_pred)*sum(log_loss(temp_toy_dataset[,9], y_pred))
est_risk_minus_true_risk <- append(est_risk_minus_true_risk, loss-true_risk)
var_loss = var(y_pred)
var_mean_loss = var_loss/length(y_pred)
ste = sqrt(var_mean_loss)
ci_upper_limit =  loss + (ste*1.96)
ci_lower_limit =  loss - (ste*1.96)
}
plot(est_risk_minus_true_risk)
histogram(est_risk_minus_true_risk)
library(dplyr)
library(ggplot2)
library(dplyr)
library(ggplot2)
library(dplyr)
toy_dataset = toy_data(50, 0)
model  <- glm(y ~ x.1+x.2+x.3+x.4+x.5+x.6+x.7+x.8, family="binomial", data=toy_dataset)
y_pred <- predict(model, ds_dgp[,1:8], type="response") #predict on the proxy
true_risk <- 1/length(y_pred)*sum(log_loss(ds_dgp[,9], y_pred))
est_risk_minus_true_risk <- c()
for (i in 1:1000) {
temp_toy_dataset = toy_data(50, i)
y_pred <- predict(model, temp_toy_dataset[,1:8], type="response")
loss <- 1/length(y_pred)*sum(log_loss(temp_toy_dataset[,9], y_pred))
est_risk_minus_true_risk <- append(est_risk_minus_true_risk, loss-true_risk)
var_loss = var(y_pred)
var_mean_loss = var_loss/length(y_pred)
ste = sqrt(var_mean_loss)
ci_upper_limit =  loss + (ste*1.96)
ci_lower_limit =  loss - (ste*1.96)
}
risk_estimate_diff <- density(est_risk_minus_true_risk)
plot(risk_estimate_diff)
toy_dataset = toy_data(50, 0)
model  <- glm(y ~ x.1+x.2+x.3+x.4+x.5+x.6+x.7+x.8, family="binomial", data=toy_dataset)
y_pred <- predict(model, ds_dgp[,1:8], type="response") #predict on the proxy
true_risk <- 1/length(y_pred)*sum(log_loss(ds_dgp[,9], y_pred))
est_risk_minus_true_risk <- c()
for (i in 1:1000) {
temp_toy_dataset = toy_data(50, i)
y_pred <- predict(model, temp_toy_dataset[,1:8], type="response")
loss <- 1/length(y_pred)*sum(log_loss(temp_toy_dataset[,9], y_pred))
est_risk_minus_true_risk <- append(est_risk_minus_true_risk, loss-true_risk)
var_loss = var(y_pred)
var_mean_loss = var_loss/length(y_pred)
ste = sqrt(var_mean_loss)
ci_upper_limit =  loss + (ste*1.96)
ci_lower_limit =  loss - (ste*1.96)
}
ggplot(data = est_risk_minus_true_risk) +
geom_density()
toy_dataset = toy_data(50, 0)
model  <- glm(y ~ x.1+x.2+x.3+x.4+x.5+x.6+x.7+x.8, family="binomial", data=toy_dataset)
y_pred <- predict(model, ds_dgp[,1:8], type="response") #predict on the proxy
true_risk <- 1/length(y_pred)*sum(log_loss(ds_dgp[,9], y_pred))
est_risk_minus_true_risk <- c()
for (i in 1:1000) {
temp_toy_dataset = toy_data(50, i)
y_pred <- predict(model, temp_toy_dataset[,1:8], type="response")
loss <- 1/length(y_pred)*sum(log_loss(temp_toy_dataset[,9], y_pred))
est_risk_minus_true_risk <- append(est_risk_minus_true_risk, loss-true_risk)
var_loss = var(y_pred)
var_mean_loss = var_loss/length(y_pred)
ste = sqrt(var_mean_loss)
ci_upper_limit =  loss + (ste*1.96)
ci_lower_limit =  loss - (ste*1.96)
}
ggplot(data = data.frame(x=est_risk_minus_true_risk)) +
geom_density()
toy_dataset = toy_data(50, 0)
model  <- glm(y ~ x.1+x.2+x.3+x.4+x.5+x.6+x.7+x.8, family="binomial", data=toy_dataset)
y_pred <- predict(model, ds_dgp[,1:8], type="response") #predict on the proxy
true_risk <- 1/length(y_pred)*sum(log_loss(ds_dgp[,9], y_pred))
est_risk_minus_true_risk <- c()
for (i in 1:1000) {
temp_toy_dataset = toy_data(50, i)
y_pred <- predict(model, temp_toy_dataset[,1:8], type="response")
loss <- 1/length(y_pred)*sum(log_loss(temp_toy_dataset[,9], y_pred))
est_risk_minus_true_risk <- append(est_risk_minus_true_risk, loss-true_risk)
var_loss = var(y_pred)
var_mean_loss = var_loss/length(y_pred)
ste = sqrt(var_mean_loss)
ci_upper_limit =  loss + (ste*1.96)
ci_lower_limit =  loss - (ste*1.96)
}
ggplot(data = data.frame(x=est_risk_minus_true_risk), aes(x = x)) +
geom_density()
toy_dataset = toy_data(50, 0)
model  <- glm(y ~ x.1+x.2+x.3+x.4+x.5+x.6+x.7+x.8, family="binomial", data=toy_dataset)
y_pred <- predict(model, ds_dgp[,1:8], type="response") #predict on the proxy
true_risk <- 1/length(y_pred)*sum(log_loss(ds_dgp[,9], y_pred))
est_risk_minus_true_risk <- c()
for (i in 1:1000) {
temp_toy_dataset = toy_data(50, i)
y_pred <- predict(model, temp_toy_dataset[,1:8], type="response")
loss <- 1/length(y_pred)*sum(log_loss(temp_toy_dataset[,9], y_pred))
est_risk_minus_true_risk <- append(est_risk_minus_true_risk, loss-true_risk)
var_loss = var(y_pred)
var_mean_loss = var_loss/length(y_pred)
ste = sqrt(var_mean_loss)
ci_upper_limit =  loss + (ste*1.96)
ci_lower_limit =  loss - (ste*1.96)
}
ggplot(data = data.frame(x=est_risk_minus_true_risk), aes(x = x)) +
geom_density()
toy_dataset = toy_data(50, 0)
model  <- glm(y ~ x.1+x.2+x.3+x.4+x.5+x.6+x.7+x.8, family="binomial", data=toy_dataset)
y_pred <- predict(model, ds_dgp[,1:8], type="response") #predict on the proxy
true_risk <- 1/length(y_pred)*sum(log_loss(ds_dgp[,9], y_pred))
est_risk_minus_true_risk <- c()
for (i in 1:1000) {
temp_toy_dataset = toy_data(50, i)
y_pred <- predict(model, temp_toy_dataset[,1:8], type="response")
loss <- 1/length(y_pred)*sum(log_loss(temp_toy_dataset[,9], y_pred))
est_risk_minus_true_risk <- append(est_risk_minus_true_risk, loss-true_risk)
var_loss = var(y_pred)
var_mean_loss = var_loss/length(y_pred)
ste = sqrt(var_mean_loss)
ci_upper_limit =  loss + (ste*1.96)
ci_lower_limit =  loss - (ste*1.96)
}
ggplot(data = data.frame(x=est_risk_minus_true_risk), aes(x = x)) +
geom_density() +
ggtitle('Difference between the estimated risk and the true risk')
toy_dataset = toy_data(50, 0)
model  <- glm(y ~ x.1+x.2+x.3+x.4+x.5+x.6+x.7+x.8, family="binomial", data=toy_dataset)
y_pred <- predict(model, ds_dgp[,1:8], type="response") #predict on the proxy
true_risk <- 1/length(y_pred)*sum(log_loss(ds_dgp[,9], y_pred))
est_risk_minus_true_risk <- c()
for (i in 1:1000) {
temp_toy_dataset = toy_data(50, i)
y_pred <- predict(model, temp_toy_dataset[,1:8], type="response")
loss <- 1/length(y_pred)*sum(log_loss(temp_toy_dataset[,9], y_pred))
est_risk_minus_true_risk <- append(est_risk_minus_true_risk, loss-true_risk)
var_loss = var(y_pred)
var_mean_loss = var_loss/length(y_pred)
ste = sqrt(var_mean_loss)
ci_upper_limit =  loss + (ste*1.96)
ci_lower_limit =  loss - (ste*1.96)
}
ggplot(data = data.frame(x=est_risk_minus_true_risk), aes(x = x)) +
geom_density() +
ggtitle('Difference between the estimated risk and the true risk')+
xlab("est. risk - true risk")+
ylab("density")
toy_dataset = toy_data(50, 0)
model  <- glm(y ~ x.1+x.2+x.3+x.4+x.5+x.6+x.7+x.8, family="binomial", data=toy_dataset)
y_pred <- predict(model, ds_dgp[,1:8], type="response") #predict on the proxy
true_risk <- 1/length(y_pred)*sum(log_loss(ds_dgp[,9], y_pred))
est_risk_minus_true_risk <- c()
for (i in 1:1000) {
temp_toy_dataset = toy_data(50, i)
y_pred <- predict(model, temp_toy_dataset[,1:8], type="response")
loss <- 1/length(y_pred)*sum(log_loss(temp_toy_dataset[,9], y_pred))
est_risk_minus_true_risk <- append(est_risk_minus_true_risk, loss-true_risk)
var_loss = var(y_pred)
var_mean_loss = var_loss/length(y_pred)
ste = sqrt(var_mean_loss)
ci_upper_limit =  loss + (ste*1.96)
ci_lower_limit =  loss - (ste*1.96)
}
ggplot(data = data.frame(x=est_risk_minus_true_risk), aes(x = x)) +
geom_density() +
ggtitle('Difference between the estimated risk and the true risk')+
xlab("est. risk - true risk")+
ylab("density")+
xlim(-2.5, 2.5)
toy_dataset = toy_data(50, 0)
model  <- glm(y ~ x.1+x.2+x.3+x.4+x.5+x.6+x.7+x.8, family="binomial", data=toy_dataset)
y_pred <- predict(model, ds_dgp[,1:8], type="response") #predict on the proxy
true_risk <- 1/length(y_pred)*sum(log_loss(ds_dgp[,9], y_pred))
est_risk_minus_true_risk <- c()
for (i in 1:1000) {
temp_toy_dataset = toy_data(50, i)
y_pred <- predict(model, temp_toy_dataset[,1:8], type="response")
loss <- 1/length(y_pred)*sum(log_loss(temp_toy_dataset[,9], y_pred))
est_risk_minus_true_risk <- append(est_risk_minus_true_risk, loss-true_risk)
var_loss = var(y_pred)
var_mean_loss = var_loss/length(y_pred)
ste = sqrt(var_mean_loss)
ci_upper_limit =  loss + (ste*1.96)
ci_lower_limit =  loss - (ste*1.96)
}
ggplot(data = data.frame(x=est_risk_minus_true_risk), aes(x = x)) +
geom_density() +
ggtitle('Difference between the estimated risk and the true risk')+
xlab("est. risk - true risk")+
ylab("density")+
xlim(-0.25, .25)
toy_dataset = toy_data(50, 0)
model  <- glm(y ~ x.1+x.2+x.3+x.4+x.5+x.6+x.7+x.8, family="binomial", data=toy_dataset)
y_pred <- predict(model, ds_dgp[,1:8], type="response") #predict on the proxy
true_risk <- 1/length(y_pred)*sum(log_loss(ds_dgp[,9], y_pred))
est_risk_minus_true_risk <- c()
for (i in 1:1000) {
temp_toy_dataset = toy_data(50, i)
y_pred <- predict(model, temp_toy_dataset[,1:8], type="response")
loss <- 1/length(y_pred)*sum(log_loss(temp_toy_dataset[,9], y_pred))
est_risk_minus_true_risk <- append(est_risk_minus_true_risk, loss-true_risk)
var_loss = var(y_pred)
var_mean_loss = var_loss/length(y_pred)
ste = sqrt(var_mean_loss)
ci_upper_limit =  loss + (ste*1.96)
ci_lower_limit =  loss - (ste*1.96)
}
ggplot(data = data.frame(x=est_risk_minus_true_risk), aes(x = x)) +
geom_density() +
ggtitle('Difference between the estimated risk and the true risk')+
xlab("est. risk - true risk")+
ylab("density")
toy_dataset = toy_data(50, 0)
model  <- glm(y ~ x.1+x.2+x.3+x.4+x.5+x.6+x.7+x.8, family="binomial", data=toy_dataset)
y_pred <- predict(model, ds_dgp[,1:8], type="response") #predict on the proxy
true_risk <- 1/length(y_pred)*sum(log_loss(ds_dgp[,9], y_pred))
est_risk_minus_true_risk <- c()
for (i in 1:1000) {
temp_toy_dataset = toy_data(50, i)
y_pred <- predict(model, temp_toy_dataset[,1:8], type="response")
loss <- 1/length(y_pred)*sum(log_loss(temp_toy_dataset[,9], y_pred))
est_risk_minus_true_risk <- append(est_risk_minus_true_risk, loss-true_risk)
var_loss = var(y_pred)
var_mean_loss = var_loss/length(y_pred)
ste = sqrt(var_mean_loss)
ci_upper_limit =  loss + (ste*1.96)
ci_lower_limit =  loss - (ste*1.96)
}
ggplot(data = data.frame(x=est_risk_minus_true_risk), aes(x = x)) +
geom_density() +
ggtitle('Difference between the estimated risk and the true risk')+
xlab("est. risk - true risk")+
ylab("density")
cat('Hello')
?med
?median
a<-c(TRUE, FALSE)
sum(a)
sum(a)/length(a)
toy_dataset = toy_data(50, 0)
model  <- glm(y ~ x.1+x.2+x.3+x.4+x.5+x.6+x.7+x.8, family="binomial", data=toy_dataset)
y_pred <- predict(model, ds_dgp[,1:8], type="response") #predict on the proxy
true_risk <- 1/length(y_pred)*sum(log_loss(ds_dgp[,9], y_pred))
est_risk_minus_true_risk <- c()
standard_errors <- c()
ci_contains_true_risk <- c()
for (i in 1:1000) {
temp_toy_dataset = toy_data(50, i)
y_pred <- predict(model, temp_toy_dataset[,1:8], type="response")
loss <- 1/length(y_pred)*sum(log_loss(temp_toy_dataset[,9], y_pred))
var_loss = var(y_pred)
var_mean_loss = var_loss/length(y_pred)
ste = sqrt(var_mean_loss)
ci_upper_limit =  loss + (ste*1.96)
ci_lower_limit =  loss - (ste*1.96)
if (true_risk<=ci_upper_limit & ci_lower_limit<=true_risk) {
ci_contains_true_risk<-append(ci_contains_true_risk, TRUE)
}
else{
ci_contains_true_risk<-append(ci_contains_true_risk, FALSE)
}
est_risk_minus_true_risk <- append(est_risk_minus_true_risk, loss-true_risk)
standard_errors <- append(standard_errors, ste)
}
ggplot(data = data.frame(x=est_risk_minus_true_risk), aes(x = x)) +
geom_density() +
ggtitle('Difference between the estimated risk and the true risk')+
xlab("est. risk - true risk")+
ylab("density")
print(paste("True risk proxy:", true_risk))
print(paste("Mean difference:", mean(est_risk_minus_true_risk)))
print(paste("Median standard error:", median(standard_errors)))
print(paste("Percentage of CI that contains true risk:", sum(ci_contains_true_risk)/length(ci_contains_true_risk)))
toy_dataset = toy_data(50, 0)
model  <- glm(y ~ x.1+x.2+x.3+x.4+x.5+x.6+x.7+x.8, family="binomial", data=toy_dataset)
y_pred <- predict(model, ds_dgp[,1:8], type="response") #predict on the proxy
true_risk <- 1/length(y_pred)*sum(log_loss(ds_dgp[,9], y_pred))
est_risk_minus_true_risk <- c()
standard_errors <- c()
ci_contains_true_risk <- c()
for (i in 1:1000) {
temp_toy_dataset = toy_data(50, i)
y_pred <- predict(model, temp_toy_dataset[,1:8], type="response")
loss <- 1/length(y_pred)*sum(log_loss(temp_toy_dataset[,9], y_pred))
var_loss = var(y_pred)
var_mean_loss = var_loss/length(y_pred)
ste = sqrt(var_mean_loss)
ci_upper_limit =  loss + (ste*1.96)
ci_lower_limit =  loss - (ste*1.96)
if (true_risk<=ci_upper_limit & ci_lower_limit<=true_risk) {
ci_contains_true_risk<-append(ci_contains_true_risk, TRUE)
}
else{
ci_contains_true_risk<-append(ci_contains_true_risk, FALSE)
}
est_risk_minus_true_risk <- append(est_risk_minus_true_risk, loss-true_risk)
standard_errors <- append(standard_errors, ste)
}
ggplot(data = data.frame(x=est_risk_minus_true_risk), aes(x = x)) +
geom_density() +
ggtitle('Difference between the estimated risk and the true risk')+
xlab("est. risk - true risk")+
ylab("density")
print(paste("True risk proxy:", true_risk))
print(paste("Mean difference:", mean(est_risk_minus_true_risk)))
print(paste("Median standard error:", median(standard_errors)))
print(paste("Percentage of CI that contains true risk:", sum(ci_contains_true_risk)/length(ci_contains_true_risk)*100 ))
